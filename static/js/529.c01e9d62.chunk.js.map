{"version":3,"file":"static/js/529.c01e9d62.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAHY,mCAIZC,SAAU,QACVC,eAAe,GAIZ,IAAMC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,oBADQ,cACzBK,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,EAAAA,EAAAA,IAAA,6BACGS,IAFA,cACpBJ,EADoB,yBAKjBA,EAASC,KAAKC,SALG,2CAAH,sDAQdG,EAAe,mCAAG,WAAOC,GAAP,uFACJX,EAAAA,EAAAA,IAAA,gBACVW,IAFc,cACrBN,EADqB,yBAKlBA,EAASC,MALS,2CAAH,sDAQfM,EAAa,mCAAG,WAAOD,GAAP,uFACFX,EAAAA,EAAAA,IAAA,gBACVW,EADU,aADE,cACnBN,EADmB,yBAKhBA,EAASC,KAAKO,MALE,2CAAH,sDAQbC,EAAe,mCAAG,WAAOH,GAAP,uFACJX,EAAAA,EAAAA,IAAA,gBACVW,EADU,aADI,cACrBN,EADqB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,qD,gJCxCfQ,GAAaC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,kP,0BCwEvB,EApEqB,WAAO,IAAD,IACzB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAEFW,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uFACXhB,EADW,0EAKKiB,EAAAA,GAAqBjB,GAL1B,OAKRL,EALQ,OAOdc,EAAgBd,GAPF,gDASduB,QAAQC,IAAR,MATc,yDAAH,qDAYfH,GACD,GAAE,CAAChB,IAEJ,IAAQoB,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,YAAaC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAEpD,OACE,6BACE,SAAC,KAAD,CAAMC,GAAId,EAAV,+BAEE,iCACE,wBAAKS,KACL,gBACEM,IACEL,EAAW,wCAC0BA,GACjCM,EAENC,MAAM,QACNC,IAAKT,KAEP,yCACc,4BAAOE,EAAP,YAEd,sCACA,uBAAIC,KACJ,mCACCC,IAAU,uBAAIA,EAAOM,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,QACnD,sDAGJ,2BACE,yBACE,SAAC5B,EAAD,CAAYqB,GAAG,OAAOZ,MAAO,CAAEC,KAAM,KAArC,qBAIF,yBACE,SAACV,EAAD,CAAYqB,GAAG,UAAUZ,MAAO,CAAEC,KAAM,KAAxC,2BAKJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,CAAQC,GAAInC,QAInB,C","sources":["api-service/film-service.js","pages/CurrentMovie/CurrentMovie.styled.jsx","pages/CurrentMovie/CurrentMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bcffd2e7e681aa94b83a55719216dc7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    // limit: 40,\n  };\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `trending/all/day`\n  );\n  // console.log(response)\n  return response.data.results;\n}\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `search/movie?query=${query}`\n      );\n      // console.log(response.data.results)\n      return response.data.results;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}`\n      );\n      // console.log(response.data)\n      return response.data;\n}\n\nexport const getMovieRoles = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}/credits`\n      );\n      // console.log(response.data.cast)\n      return response.data.cast;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews`\n      );\n      // console.log(response.data.results)\n      return response.data.results;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  padding: 8px 16px;\n  width: 50px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: #1a39a0;\n    background-color: #ffcc00;\n  }\n`;","import { Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { StyledLink } from './CurrentMovie.styled';\nimport * as TMDB from '../../api-service/film-service';\nimport defaulImage from '../../helpers/dog-loader.jpg';\nimport { useState, useEffect } from 'react';\n\nconst CurrentMovie = () => {\n  const [detalisMovie, setDetalisMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!movieId) {\n        return;\n      }\n      try {\n        const data = await TMDB.getMovieDetails(movieId);\n        // console.log(data);\n        setDetalisMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const { title, poster_path, vote_average, overview, genres } = detalisMovie;\n\n  return (\n    <main>\n      <Link to={backLinkHref}>&#8678;Go to back</Link>\n      {\n        <>\n          <h2>{title}</h2>\n          <img\n            src={\n              poster_path\n                ? `http://image.tmdb.org/t/p/w500${poster_path}`\n                : defaulImage\n            }\n            width=\"340px\"\n            alt={title}\n          />\n          <p>\n            User score: <span>{vote_average} %</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres && <p>{genres.map(({ name }) => name).join(' ')}</p>}\n          <p>Additional information</p>\n        </>\n      }\n      <ul>\n        <li>\n          <StyledLink to=\"cast\" state={{ from: '/' }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from: '/' }}>\n            Reviews\n          </StyledLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading detalis...</div>}>\n        <Outlet id={movieId} />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default CurrentMovie;"],"names":["axios","api_key","language","include_adult","getTrandingMovies","response","data","results","getSearchMovie","query","getMovieDetails","movieId","getMovieRoles","cast","getMovieReviews","StyledLink","styled","NavLink","useState","detalisMovie","setDetalisMovie","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","TMDB","console","log","title","poster_path","vote_average","overview","genres","to","src","defaulImage","width","alt","map","name","join","Suspense","fallback","id"],"sourceRoot":""}