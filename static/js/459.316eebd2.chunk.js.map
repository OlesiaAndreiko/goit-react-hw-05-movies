{"version":3,"file":"static/js/459.316eebd2.chunk.js","mappings":"mTAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAHY,mCAIZC,SAAU,QACVC,eAAe,GAGZ,IAAMC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,oBADQ,cACzBK,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,EAAAA,EAAAA,IAAA,6BACGS,IAFA,cACpBJ,EADoB,yBAKjBA,EAASC,KAAKC,SALG,2CAAH,sDAQdG,EAAe,mCAAG,WAAOC,GAAP,uFACJX,EAAAA,EAAAA,IAAA,gBACVW,IAFc,cACrBN,EADqB,OAIzBO,QAAQC,IAAIR,EAASC,MAJI,kBAKlBD,EAASC,MALS,2CAAH,sDAQfQ,EAAa,mCAAG,WAAOH,GAAP,uFACFX,EAAAA,EAAAA,IAAA,gBACVW,EADU,aADE,cACnBN,EADmB,yBAKhBA,EAASC,KAAKS,MALE,2CAAH,sDAQbC,EAAe,mCAAG,WAAOL,GAAP,uFACJX,EAAAA,EAAAA,IAAA,gBACVW,EADU,aADI,cACrBN,EADqB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,qD,oKCxCfU,EAAcC,EAAAA,GAAAA,GAAH,gEAKXC,EAAcD,EAAAA,GAAAA,EAAH,yG,SCmCxB,EArCgB,WACd,IAAQP,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uFACXd,EADW,0EAKKe,EAAAA,GAAqBf,GAL1B,OAKRL,EALQ,OAQdiB,EAAWjB,GARG,gDAUdM,QAAQC,IAAR,MAVc,yDAAH,qDAafY,GACD,GAAE,CAACd,KAGF,SAACM,EAAD,UACGK,EACCA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,SAACV,EAAD,UAAcW,MAFPF,EADC,KAOZ,SAACT,EAAD,yDAIP,C","sources":["api-service/film-service.js","pages/MovieDetalis/Reviews/Reviews.styled.jsx","pages/MovieDetalis/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bcffd2e7e681aa94b83a55719216dc7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `trending/all/day`\n  );\n  // console.log(response)\n  return response.data.results;\n}\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `search/movie?query=${query}`\n      );\n      // console.log(response.data.results)\n      return response.data.results;\n}\n\nexport const getMovieDetails = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}`\n      );\n      console.log(response.data)\n      return response.data;\n}\n\nexport const getMovieRoles = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}/credits`\n      );\n      // console.log(response.data.cast)\n      return response.data.cast;\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews`\n      );\n      // console.log(response.data.results)\n      return response.data.results;\n}","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  color: #250c27;\n`;\n\nexport const TextReviews = styled.p`\n  color: #4a4646;\n  font-size: 16px;\n  line-height: 1.3;\n  font-weight: 500;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport * as TMDB from '../../../api-service/film-service';\nimport {ReviewsList, TextReviews} from \"./Reviews.styled\"\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!movieId) {\n        return;\n      }\n      try {\n        const data = await TMDB.getMovieReviews(movieId);\n        // console.log(data);\n\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {reviews ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <TextReviews>{content}</TextReviews>\n          </li>\n        ))\n      ) : (\n        <TextReviews>We don`t have any reviews for this movie.</TextReviews>\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews; "],"names":["axios","api_key","language","include_adult","getTrandingMovies","response","data","results","getSearchMovie","query","getMovieDetails","movieId","console","log","getMovieRoles","cast","getMovieReviews","ReviewsList","styled","TextReviews","useParams","useState","reviews","setReviews","useEffect","fetchData","TMDB","map","id","author","content"],"sourceRoot":""}